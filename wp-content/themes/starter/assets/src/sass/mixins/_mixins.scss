@mixin pad-hit {
	@media screen and (max-width: 1420px) {
		padding-left: 20px;
		padding-right: 20px;
	}
}

@mixin desktop-pad-hit {
	@media screen and (min-width: 769px) and (max-width: 1420px) {
		padding-left: 20px;
		padding-right: 20px;
	}
}

/**
 * Fluid Properties
 *

Example usage:

h1, .h1 {
	@include fluid-type(font-size, 320px, 1425px, 40px, 80px); 
	@include fluid-type(line-height, 360px, 1400px, 20px, 40px); 
	@include fluid-type(padding-bottom padding-top, 20em, 70em, 2em, 4em); // Multiple properties
}

Works with rem and em. All format type within a single include must be the same.

Credit: https://www.sassmeister.com/gist/7f22e44ace49b5124eec
*******************************************************************************/
@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
  @each $property in $properties { #{$property}: $min-value; }

  @media (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * (100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)});
    }
  }

  @media (min-width: $max-vw) {
    @each $property in $properties { #{$property}: $max-value; }
  }
}

@function strip-unit($number) {
  @if type-of($number) == "number" and not unitless($number) { @return $number / ($number * 0 + 1); }
  @return $number;
}

/**
 * Transitions
 */
$basic-transition: '.25s all ease-in-out';

@mixin basic-transition( $basic-transition... ) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}